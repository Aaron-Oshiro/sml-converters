{
  "$id": "https://www.atscale.com/ml/dataset.schema.json",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "Dataset",
  "type": "object",
  "required": ["object_type", "unique_name", "label", "connection_id", "columns"],
  "oneOf": [
    {
      "required": ["sql"],
      "errorMessage": "Missing sql prop - please add (sql) OR table property"
    },
    {
      "required": ["table"],
      "errorMessage": "Missing table prop - please add (sql) OR table property"
    }
  ],
  "properties": {
    "object_type": {
      "const": "dataset"
    },
    "unique_name": {
      "type": "string",
      "minLength": 1,
      "maxLength": 63
    },
    "label": {
      "type": "string",
      "minLength": 1,
      "maxLength": 128
    },
    "description": {
      "type": "string",
      "minLength": 1
    },
    "connection_id": {
      "type": "string",
      "minLength": 1,
      "maxLength": 128
    },
    "columns": {
      "type": "array",
      "contains": {
        "type": "object"
      },
      "items": {
        "oneOf": [
          {
            "required": ["data_type"],
            "errorMessage": "oneOf: if on a column the data_type is set then the map property should not be set",
            "not": {
              "required": ["map"]
            }
          },
          {
            "required": ["map"],
            "errorMessage": "oneOf: if on a column the map property is set then neither data_type nor parent_column should exists",
            "not": {
              "anyOf": [
                {
                  "required": ["data_type"]
                },
                {
                  "required": ["parent_column"]
                }
              ]
            }
          }
        ],
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1
          },
          "data_type": {
            "type": "string",
            "minLength": 3,
            "errorMessage": "invalid column data_type must be one of 'string', ' int', ' long', ' bigint', 'tinyint', 'float', 'double', 'decimal', 'decimal(x,y)', 'number', 'number(x,y)', 'numeric(x,y)', 'boolean', 'date', 'datetime', 'timestamp'"
          },
          "sql": {
            "type": "string",
            "minLength": 1
          },
          "dialects": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["dialect", "sql"],
              "properties": {
                "dialect": {
                  "type": "string",
                  "minLength": 1,
                  "enum": ["Snowflake", "BigQuery", "Iris", "Postgresql", "DatabricksSQL"],
                  "errorMessage": "must have a value: 'Snowflake', 'BigQuery', 'Iris', 'Postgresql' or 'DatabricksSQL'"
                },
                "sql": {
                  "type": "string",
                  "minLength": 1
                }
              }
            }
          },
          "map": {
            "type": "object",
            "required": ["field_terminator", "key_terminator", "key_type", "value_type"],
            "properties": {
              "field_terminator": {
                "type": "string",
                "minLength": 1
              },
              "key_terminator": {
                "type": "string",
                "minLength": 1
              },
              "key_type": {
                "type": "string",
                "minLength": 1
              },
              "value_type": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          "parent_column": {
            "type": "string",
            "minLength": 1
          }
        }
      }
    },
    "table": {
      "type": "string",
      "minLength": 1
    },
    "sql": {
      "type": "string",
      "minLength": 1
    },
    "dialects": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["dialect", "sql"],
        "properties": {
          "dialect": {
            "type": "string",
            "minLength": 1,
            "enum": ["Snowflake", "BigQuery", "Iris", "Postgresql", "DatabricksSQL"],
            "errorMessage": "must have a value: 'Snowflake', 'BigQuery', 'Iris', 'Postgresql' or 'DatabricksSQL'"
          },
          "sql": {
            "type": "string",
            "minLength": 1
          }
        }
      }
    },
    "immutable": {
      "type": "boolean"
    },
    "alternate": {
      "oneOf": [
        {
          "required": ["sql"],
          "errorMessage": "use (sql) OR (table + connection_id) properties",
          "not": {
            "anyOf": [
              {
                "required": ["table"]
              },
              {
                "required": ["connection_id"]
              }
            ]
          }
        },
        {
          "required": ["table", "connection_id"],
          "errorMessage": "use (sql) OR (table + connection_id) properties",
          "not": {
            "required": ["sql"]
          }
        }
      ],
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "minLength": 1
        },
        "sql": {
          "type": "string",
          "minLength": 1
        },
        "connection_id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 128
        },
        "table": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "incremental": {
      "type": "object",
      "required": ["column", "grace_period"],
      "properties": {
        "column": {
          "type": "string",
          "minLength": 1,
          "maxLength": 128
        },
        "grace_period": {
          "type": "string",
          "description": "Examples '100s' '15d' '2w'. It should contain an integer value, followed by time unit. Time unit can be 's' (second), 'm' (minute), 'h' (hour), 'd' (day) or 'w' (week).",
          "pattern": "^\\d{1,10}[smhdw]$",
          "minLength": 2,
          "maxLength": 11,
          "errorMessage" : "Invalid value. Should be in format decimal and time unit. Example: '100s' '15d' '2w'. Decimal value should be 10 digits max."
        }
      }
    }
  },
  "errorMessage": {
    "oneOf": "Cannot have both sql and table props - please add only one of them"
  }
}
